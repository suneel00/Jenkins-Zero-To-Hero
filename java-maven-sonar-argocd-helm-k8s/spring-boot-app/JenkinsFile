pipeline {
  agent {
    docker {
      image 'suneel00/devops-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    DOCKER_IMAGE = "suneel00/ultimate-cicd:${BUILD_NUMBER}"
    SONAR_URL = "http://44.204.26.198:9000"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "suneel00"
  }

  stages {

    stage('Checkout') {
      steps {
        dir('..') { // go up from spring-boot-app to java-maven-sonar-argocd-helm-k8s
          git branch: 'main',
              url: 'https://github.com/suneel00/Jenkins-Zero-To-Hero.git'
        }
      }
    }

    stage('Build and Test') {
      steps {
        sh 'mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL'
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        sh 'docker build -t $DOCKER_IMAGE .'
        script {
          docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
            docker.image(DOCKER_IMAGE).push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'github', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
          dir('..') { // go back to java-maven-sonar-argocd-helm-k8s to access manifests and .git
            sh '''
              sed -i "s/replaceImageTag/${BUILD_NUMBER}/g spring-boot-app-manifests/deployment.yml
              git config user.email "suneelmadana007@gmail.com"
              git config user.name "SuneelMadana"
              git add spring-boot-app-manifests/deployment.yml
              git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
              git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
            '''
          }
        }
      }
    }

  }
}
