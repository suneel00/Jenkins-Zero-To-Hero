pipeline {
    agent {
        docker { image 'suneel00/devops-agent:v1'
                 args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
               }
    }
    stages {
        stage('Checkout') {
            steps {
	    	 sh 'echo passed'
                //git branch: 'main', url: 'https://github.com/suneel00/Jenkins-Zero-To-Hero.git'
            }
        }
        stage('Build and Test') {
            steps {
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean install'
                
            }
       }
       stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://3.87.224.204:9000"
      }
      steps {
        withCredentials([string(credentialsId: ' sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Docker build and Push ') {
            steps {
                script {
                   withDockerRegistry(credentialsId: 'docker-cred') {
                     sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t suneel00/ultimate-cicd:${BUILD_NUMBER} .'
                     sh 'docker push suneel00/ultimate-cicd:${BUILD_NUMBER}'
                   }
                }
                
            }
       }
       stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "suneel00"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "suneelmadana007@gmail.com"
                    git config user.name "SuneelMadana"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
    
}
